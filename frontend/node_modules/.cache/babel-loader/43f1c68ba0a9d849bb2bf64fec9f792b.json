{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      contentType\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._contextType = contentType;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n\n    return Promise.reject(res);\n  }\n\n  makeSignUp(_ref2) {\n    let {\n      name,\n      email,\n      password\n    } = _ref2;\n    return fetch(this._baseUrl + \"/signup\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType\n      },\n      body: JSON.stringify(name, email, password)\n    }).then(this._checkResponse);\n  }\n\n  makeSignIn(_ref3) {\n    let {\n      email,\n      password\n    } = _ref3;\n    return fetch(this._baseUrl + \"/signin\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType\n      },\n      body: JSON.stringify(email, password)\n    }).then(this._checkResponse);\n  }\n\n  makeSignOut() {\n    return fetch(this._baseUrl + \"/signout\", {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      credentials: \"include\",\n      cache: \"no-cache\",\n      headers: {\n        ContentType: this._contentType\n      }\n    });\n  }\n\n  updateUserInfo(email, password) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  contentType: \"application/json\"\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","baseUrl","contentType","_baseUrl","_contextType","_checkResponse","res","ok","Promise","resolve","json","reject","makeSignUp","name","email","password","fetch","method","credentials","headers","ContentType","_contentType","body","JSON","stringify","then","makeSignIn","makeSignOut","getUserInfo","cache","updateUserInfo","mainApi"],"sources":["/Users/mike/Desktop/Code/Projects/Diploma/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\n  constructor({ baseUrl, contentType }) {\n    this._baseUrl = baseUrl;\n    this._contextType = contentType;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(res);\n  }\n  makeSignUp({ name, email, password }) {\n    return fetch(this._baseUrl + \"/signup\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify(name, email, password),\n    }).then(this._checkResponse);\n  }\n\n  makeSignIn({ email, password }) {\n    return fetch(this._baseUrl + \"/signin\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify(email, password),\n    }).then(this._checkResponse);\n  }\n\n  makeSignOut() {\n    return fetch(this._baseUrl + \"/signout\", {\n      method: \"POST\",\n      credentials: \"include\",\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + \"/users/me\", {\n      credentials: \"include\",\n      cache: \"no-cache\",\n      headers: {\n        ContentType: this._contentType,\n      },\n    });\n  }\n  updateUserInfo(email, password) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify({ email, password }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  contentType: \"application/json\",\n});\n\nexport default mainApi;\n"],"mappings":"AAAA,MAAMA,OAAN,CAAc;EACZC,WAAW,OAA2B;IAAA,IAA1B;MAAEC,OAAF;MAAWC;IAAX,CAA0B;IACpC,KAAKC,QAAL,GAAgBF,OAAhB;IACA,KAAKG,YAAL,GAAoBF,WAApB;EACD;;EAEDG,cAAc,CAACC,GAAD,EAAM;IAClB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOC,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACI,IAAJ,EAAhB,CAAP;IACD;;IACD,OAAOF,OAAO,CAACG,MAAR,CAAeL,GAAf,CAAP;EACD;;EACDM,UAAU,QAA4B;IAAA,IAA3B;MAAEC,IAAF;MAAQC,KAAR;MAAeC;IAAf,CAA2B;IACpC,OAAOC,KAAK,CAAC,KAAKb,QAAL,GAAgB,SAAjB,EAA4B;MACtCc,MAAM,EAAE,MAD8B;MAEtCC,WAAW,EAAE,SAFyB;MAGtCC,OAAO,EAAE;QACPC,WAAW,EAAE,KAAKC;MADX,CAH6B;MAMtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,EAAqBC,KAArB,EAA4BC,QAA5B;IANgC,CAA5B,CAAL,CAOJU,IAPI,CAOC,KAAKpB,cAPN,CAAP;EAQD;;EAEDqB,UAAU,QAAsB;IAAA,IAArB;MAAEZ,KAAF;MAASC;IAAT,CAAqB;IAC9B,OAAOC,KAAK,CAAC,KAAKb,QAAL,GAAgB,SAAjB,EAA4B;MACtCc,MAAM,EAAE,MAD8B;MAEtCC,WAAW,EAAE,SAFyB;MAGtCC,OAAO,EAAE;QACPC,WAAW,EAAE,KAAKC;MADX,CAH6B;MAMtCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,KAAf,EAAsBC,QAAtB;IANgC,CAA5B,CAAL,CAOJU,IAPI,CAOC,KAAKpB,cAPN,CAAP;EAQD;;EAEDsB,WAAW,GAAG;IACZ,OAAOX,KAAK,CAAC,KAAKb,QAAL,GAAgB,UAAjB,EAA6B;MACvCc,MAAM,EAAE,MAD+B;MAEvCC,WAAW,EAAE;IAF0B,CAA7B,CAAL,CAGJO,IAHI,CAGC,KAAKpB,cAHN,CAAP;EAID;;EAEDuB,WAAW,GAAG;IACZ,OAAOZ,KAAK,CAAC,KAAKb,QAAL,GAAgB,WAAjB,EAA8B;MACxCe,WAAW,EAAE,SAD2B;MAExCW,KAAK,EAAE,UAFiC;MAGxCV,OAAO,EAAE;QACPC,WAAW,EAAE,KAAKC;MADX;IAH+B,CAA9B,CAAZ;EAOD;;EACDS,cAAc,CAAChB,KAAD,EAAQC,QAAR,EAAkB;IAC9B,OAAOC,KAAK,CAAC,KAAKb,QAAL,GAAgB,WAAjB,EAA8B;MACxCc,MAAM,EAAE,OADgC;MAExCC,WAAW,EAAE,SAF2B;MAGxCC,OAAO,EAAE;QACPC,WAAW,EAAE,KAAKC;MADX,CAH+B;MAMxCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEV,KAAF;QAASC;MAAT,CAAf;IANkC,CAA9B,CAAL,CAOJU,IAPI,CAOC,KAAKpB,cAPN,CAAP;EAQD;;AA3DW;;AA8Dd,MAAM0B,OAAO,GAAG,IAAIhC,OAAJ,CAAY;EAC1BE,OAAO,EAAE,uBADiB;EAE1BC,WAAW,EAAE;AAFa,CAAZ,CAAhB;AAKA,eAAe6B,OAAf"},"metadata":{},"sourceType":"module"}