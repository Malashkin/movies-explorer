{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      contentType\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._contextType = contentType;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n\n    return Promise.reject(res);\n  }\n\n  makeSignUp(name, email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        ContentType: this._contentType\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n\n  makeSignIn(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        ContentType: this._contentType\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        ContentType: this._contentType,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => data);\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"GET\",\n      headers: {\n        ContentType: this._contentType,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResult);\n  }\n\n  updateUserInfo(email, password) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  contentType: \"application/json\"\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","baseUrl","contentType","_baseUrl","_contextType","_checkResponse","res","ok","Promise","resolve","json","reject","makeSignUp","name","email","password","fetch","method","credentials","headers","Accept","ContentType","_contentType","body","JSON","stringify","then","response","catch","err","console","log","makeSignIn","checkToken","token","Authorization","data","getUserInfo","_checkResult","updateUserInfo","mainApi"],"sources":["/Users/mike/Desktop/Code/Projects/Diploma/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\n  constructor({ baseUrl, contentType }) {\n    this._baseUrl = baseUrl;\n    this._contextType = contentType;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(res);\n  }\n\n  makeSignUp(name, email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify({ name, email, password }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  makeSignIn(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        ContentType: this._contentType,\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"GET\",\n      headers: {\n        ContentType: this._contentType,\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._checkResult);\n  }\n\n  updateUserInfo(email, password) {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        ContentType: this._contentType,\n      },\n      body: JSON.stringify({ email, password }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n  contentType: \"application/json\",\n});\n\nexport default mainApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}