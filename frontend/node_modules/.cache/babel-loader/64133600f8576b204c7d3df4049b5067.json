{"ast":null,"code":"class MainApi {\n  constructor(_ref) {\n    let {\n      baseUrl\n    } = _ref;\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n\n    return Promise.reject(res);\n  }\n\n  makeSignUp(name, email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n\n  makeSignIn(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => data);\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n\n  updateUserInfo(name, email, token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    }).then(this._checkResponse);\n  }\n\n  createMovie(_ref2, token) {\n    let {\n      country,\n      director,\n      duration,\n      year,\n      description,\n      image,\n      trailerLink,\n      thumbnail,\n      movieId,\n      nameRU,\n      nameEN\n    } = _ref2;\n    return fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        country,\n        director,\n        duration,\n        year,\n        description,\n        image,\n        trailerLink,\n        thumbnail,\n        movieId,\n        nameRU,\n        nameEN\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteMovie(movieId, token) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(this._checkResponse);\n  }\n\n  getSavedMovies(token) {\n    return fetch(`${this._baseUrl}/movies`, {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\"\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","baseUrl","_baseUrl","_checkResponse","res","ok","Promise","resolve","json","reject","makeSignUp","name","email","password","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","response","catch","err","console","log","makeSignIn","checkToken","token","Authorization","data","getUserInfo","updateUserInfo","createMovie","country","director","duration","year","description","image","trailerLink","thumbnail","movieId","nameRU","nameEN","deleteMovie","getSavedMovies","mainApi"],"sources":["/Users/mike/Desktop/Code/Projects/Diploma/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\n  constructor({ baseUrl }) {\n    this._baseUrl = baseUrl;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(res);\n  }\n\n  makeSignUp(name, email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email, password }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  makeSignIn(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((res) => {\n        return res;\n      })\n      .catch((err) => console.log(err));\n  }\n\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data);\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(this._checkResponse);\n  }\n\n  updateUserInfo(name, email, token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email }),\n    }).then(this._checkResponse);\n  }\n\n  createMovie(\n    {\n      country,\n      director,\n      duration,\n      year,\n      description,\n      image,\n      trailerLink,\n      thumbnail,\n      movieId,\n      nameRU,\n      nameEN,\n    },\n    token\n  ) {\n    return fetch(`${this._baseUrl}/movies`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        country,\n        director,\n        duration,\n        year,\n        description,\n        image,\n        trailerLink,\n        thumbnail,\n        movieId,\n        nameRU,\n        nameEN,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteMovie(movieId, token) {\n    return fetch(`${this._baseUrl}/movies/${movieId}`, {\n      method: \"DELETE\",\n      credentials: \"include\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then(this._checkResponse);\n  }\n\n  getSavedMovies(token) {\n    return fetch(`${this._baseUrl}/movies`, {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\",\n    }).then(this._checkResponse);\n  }\n}\n\nconst mainApi = new MainApi({\n  baseUrl: \"http://localhost:3001\",\n});\n\nexport default mainApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}